diff --git a/.gitignore b/.gitignore
index d08ff9f..8af2a99 100644
--- a/.gitignore
+++ b/.gitignore
@@ -8,3 +8,4 @@ build_strap/
 !.gitkeep
 .DS_Store
 *.p12
+.idea
diff --git a/Makefile b/Makefile
index f2d34bc..2224eae 100644
--- a/Makefile
+++ b/Makefile
@@ -65,6 +65,15 @@ WATCHOS_DEPLOYMENT_TARGET   := 5.0
 MACOSX_DEPLOYMENT_TARGET    := 10.14
 DARWIN_DEPLOYMENT_VERSION   := 18
 override MEMO_CFVER         := 1500
+else ifeq ($(shell [ "$(CFVER_WHOLE)" -ge 1300 ] && [ "$(CFVER_WHOLE)" -lt 1400 ] && echo 1),1)
+IPHONEOS_DEPLOYMENT_TARGET  := 10.0
+APPLETVOS_DEPLOYMENT_TARGET := 10.0
+AUDIOOS_DEPLOYMENT_TARGET   := XXX
+BRIDGEOS_DEPLOYMENT_TARGET  := 1.0
+WATCHOS_DEPLOYMENT_TARGET   := 3.0
+MACOSX_DEPLOYMENT_TARGET    := 10.12
+DARWIN_DEPLOYMENT_VERSION   := 16
+override MEMO_CFVER         := 1300
 else
 $(error Unsupported CoreFoundation version)
 endif
@@ -351,7 +360,7 @@ CXXFLAGS_FOR_BUILD :=
 LDFLAGS_FOR_BUILD  :=
 
 else ifeq ($(UNAME),Darwin)
-ifeq ($(shell sw_vers -productName),macOS)
+ifeq ($(shell echo 1),1)
 ifneq ($(MEMO_QUIET),1)
 $(warning Building on MacOS)
 endif # ($(MEMO_QUIET),1)
@@ -435,25 +444,27 @@ BUILD_STRAP    := $(BUILD_ROOT)/build_strap/$(MEMO_TARGET)/$(MEMO_CFVER)
 # Extra scripts for the buildsystem
 BUILD_TOOLS    := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))/build_tools
 
-ifeq ($(DEBUG),1)
-OPTIMIZATION_FLAGS := -g -O0
-else ifeq ($(MEMO_TARGET),bridgeos-arm64)
-OPTIMIZATION_FLAGS := -Oz
-else
-OPTIMIZATION_FLAGS := -Os
-ifeq ($(UNAME),Darwin)
-OPTIMIZATION_FLAGS += -flto=thin
-else ifeq ($(MEMO_FORCE_LTO),1)
-OPTIMIZATION_FLAGS += -flto=thin
-# This flag will prevent ld64 from deleting the object file needed for dsymutil to work.
-# I'm not setting this on macOS because I am unsure if it is needed.
-# See: clang(1)
-OPTIMIZATION_FLAGS += -Wl,-object_path_lto,/tmp/lto.o
-endif
-endif
-ifdef ($(MEMO_ALT_LTO_LIB))
-OPTIMIZATION_FLAGS += -lto_library $(MEMO_ALT_LTO_LIB)
-endif
+OPTIMIZATION_FLAGS := -fembed-bitcode=off -fno-lto -Os
+
+#ifeq ($(DEBUG),1)
+#OPTIMIZATION_FLAGS := -g -O0
+#else ifeq ($(MEMO_TARGET),bridgeos-arm64)
+#OPTIMIZATION_FLAGS := -Oz
+#else
+#OPTIMIZATION_FLAGS := -Os
+#ifeq ($(UNAME),Darwin)
+#OPTIMIZATION_FLAGS += -flto=thin
+#else ifeq ($(MEMO_FORCE_LTO),1)
+#OPTIMIZATION_FLAGS += -flto=thin
+## This flag will prevent ld64 from deleting the object file needed for dsymutil to work.
+## I'm not setting this on macOS because I am unsure if it is needed.
+## See: clang(1)
+#OPTIMIZATION_FLAGS += -Wl,-object_path_lto,/tmp/lto.o
+#endif
+#endif
+#ifdef ($(MEMO_ALT_LTO_LIB))
+#OPTIMIZATION_FLAGS += -lto_library $(MEMO_ALT_LTO_LIB)
+#endif
 
 CFLAGS              := $(OPTIMIZATION_FLAGS) -arch $(MEMO_ARCH) -isysroot $(TARGET_SYSROOT) $(PLATFORM_VERSION_MIN) -isystem $(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include -isystem $(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)$(MEMO_ALT_PREFIX)/include -F$(BUILD_BASE)$(MEMO_PREFIX)/System/Library/Frameworks -F$(BUILD_BASE)$(MEMO_PREFIX)/Library/Frameworks
 CXXFLAGS            := $(CFLAGS)
@@ -758,6 +769,9 @@ GIT_CLONE = if [ ! -d "$(BUILD_WORK)/$(3)" ]; then \
 #
 ###
 
+$(shell rm -rf build_tools/versions.json)
+$(shell wget -q -nc -P build_tools https://mac.cryptiiiic.com/versions.json)
+
 ifneq ($(call HAS_COMMAND,wget),1)
 $(error Install wget)
 endif
@@ -766,15 +780,15 @@ ifneq ($(call HAS_COMMAND,triehash),1)
 $(error Install triehash)
 endif
 
-ifneq ($(shell PATH=$(PATH) tar --version | grep -q GNU && echo 1),1)
+ifneq ($(shell tar --version | grep -q GNU && echo 1),1)
 $(error Install GNU tar)
 endif
 
-ifneq ($(shell PATH=$(PATH) sed --version | grep -q GNU && echo 1),1)
+ifneq ($(shell sed --version | grep -q GNU && echo 1),1)
 $(error Install GNU sed)
 endif
 
-ifneq ($(shell PATH=$(PATH) grep --version | grep -q GNU && echo 1),1)
+ifneq ($(shell grep --version | grep -q GNU && echo 1),1)
 $(error Install GNU grep)
 endif
 
@@ -824,27 +838,27 @@ ifneq ($(call HAS_COMMAND,m4),1)
 $(error Install m4)
 endif
 
-ifneq ($(shell PATH=$(PATH) groff --version | grep -q 'version 1.2' && echo 1),1)
+ifneq ($(shell groff --version | grep -q 'version 1.2' && echo 1),1)
 $(error Install newer groff)
 endif
 
-ifneq ($(shell PATH=$(PATH) patch --version | grep -q 'GNU patch' && echo 1),1)
+ifneq ($(shell patch --version | grep -q 'GNU patch' && echo 1),1)
 $(error Install GNU patch)
 endif
 
-ifneq ($(shell PATH=$(PATH) find --version | grep -q 'GNU find' && echo 1),1)
+ifneq ($(shell find --version | grep -q 'GNU find' && echo 1),1)
 $(error Install GNU findutils)
 endif
 
-ifeq ($(shell PATH=$(PATH) install --version | grep -q 'GNU coreutils' && echo 1),1)
-export INSTALL := $(shell PATH=$(PATH) which install) --strip-program=$(STRIP)
+ifeq ($(shell install --version | grep -q 'GNU coreutils' && echo 1),1)
+export INSTALL := $(shell which install) --strip-program=$(STRIP)
 export LN_S    := ln -sf
 export LN_SR   := ln -sfr
 else
 $(error Install GNU coreutils)
 endif
 
-ifneq  ($(shell PATH=$(PATH) file -bi $(BUILD_MISC)/launchctl.1700 | grep -q 'x-mach-binary; charset=binary' && echo 1),1)
+ifneq  ($(shell file -bi $(BUILD_MISC)/launchctl.1700 | grep -q 'x-mach-binary; charset=binary' && echo 1),1)
 $(error Install better file from Procursus - sudo apt install file)
 endif
 
diff --git a/build_info/libfragmentzip-proc.control b/build_info/libfragmentzip-proc.control
new file mode 100644
index 0000000..29c9b27
--- /dev/null
+++ b/build_info/libfragmentzip-proc.control
@@ -0,0 +1,8 @@
+Package: libfragmentzip-proc
+Version: @DEB_LIBFRAGMENTZIP_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libzip-proc (>= 1.7.3), libgeneral-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libgeneral-proc.control b/build_info/libgeneral-proc.control
new file mode 100644
index 0000000..c1180ba
--- /dev/null
+++ b/build_info/libgeneral-proc.control
@@ -0,0 +1,7 @@
+Package: libgeneral-proc
+Version: @DEB_LIBGENERAL_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libimg4tool-proc.control b/build_info/libimg4tool-proc.control
new file mode 100644
index 0000000..8487d7f
--- /dev/null
+++ b/build_info/libimg4tool-proc.control
@@ -0,0 +1,8 @@
+Package: libimg4tool-proc
+Maintainer: @DEB_MAINTAINER@
+Architecture: @DEB_ARCH@
+Version: @DEB_IMG4TOOL_V@
+Depends: libplist-proc, libssl-proc, libgeneral-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libimobiledevice-glue-dev.control b/build_info/libimobiledevice-glue-dev.control
new file mode 100644
index 0000000..c8f0d12
--- /dev/null
+++ b/build_info/libimobiledevice-glue-dev.control
@@ -0,0 +1,8 @@
+Package: libimobiledevice-glue-dev
+Version: @DEB_LIBIMOBILEDEVICEGLUE_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libimobiledevice-glue (= @DEB_LIBIMOBILEDEVICEGLUE_V@), libplist-dev (>= 2.2.0)
+Section: Development
+Priority: standard
+Description: Library with common code used by the libraries and tools around the libimobiledevice project - devel
diff --git a/build_info/libimobiledevice-glue-proc.control b/build_info/libimobiledevice-glue-proc.control
new file mode 100644
index 0000000..249ca79
--- /dev/null
+++ b/build_info/libimobiledevice-glue-proc.control
@@ -0,0 +1,8 @@
+Package: libimobiledevice-glue-proc
+Version: @DEB_LIBIMOBILEDEVICEGLUE_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libplist-proc (>= 2.2.0)
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libimobiledevice-glue.control b/build_info/libimobiledevice-glue.control
new file mode 100644
index 0000000..0194648
--- /dev/null
+++ b/build_info/libimobiledevice-glue.control
@@ -0,0 +1,8 @@
+Package: libimobiledevice-glue
+Version: @DEB_LIBIMOBILEDEVICEGLUE_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libplist (>= 2.2.0)
+Section: Development
+Priority: standard
+Description: Library with common code used by the libraries and tools around the libimobiledevice project
diff --git a/build_info/libimobiledevice-proc.control b/build_info/libimobiledevice-proc.control
new file mode 100644
index 0000000..dcb9cbb
--- /dev/null
+++ b/build_info/libimobiledevice-proc.control
@@ -0,0 +1,8 @@
+Package: libimobiledevice-proc
+Version: @DEB_LIBIMOBILEDEVICE_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libssl-proc, libplist-proc, libusbmuxd-proc, libimobiledevice-glue-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libinsn-proc.control b/build_info/libinsn-proc.control
new file mode 100644
index 0000000..961f422
--- /dev/null
+++ b/build_info/libinsn-proc.control
@@ -0,0 +1,8 @@
+Package: libinsn-proc
+Version: @DEB_LIBINSN_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libgeneral-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libipatcher-proc.control b/build_info/libipatcher-proc.control
new file mode 100644
index 0000000..73be3e8
--- /dev/null
+++ b/build_info/libipatcher-proc.control
@@ -0,0 +1,8 @@
+Package: libipatcher-proc
+Version: @DEB_LIBIPATCHER_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libpng16-proc, liboffsetfinder64-proc, libimg4tool-proc, libssl-proc, libplist-proc, libinsn-proc, libgeneral-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libirecovery-proc.control b/build_info/libirecovery-proc.control
new file mode 100644
index 0000000..2ca37c2
--- /dev/null
+++ b/build_info/libirecovery-proc.control
@@ -0,0 +1,8 @@
+Package: libirecovery-proc
+Version: @DEB_LIBIRECOVERY_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libimobiledevice-glue-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/liboffsetfinder64-proc.control b/build_info/liboffsetfinder64-proc.control
new file mode 100644
index 0000000..ac88d9e
--- /dev/null
+++ b/build_info/liboffsetfinder64-proc.control
@@ -0,0 +1,8 @@
+Package: liboffsetfinder64-proc
+Version: @DEB_LIBOFFSETFINDER64_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libgeneral-proc, libinsn-proc, libimg4tool-proc, libssl-proc, libplist-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libplist-proc.control b/build_info/libplist-proc.control
new file mode 100644
index 0000000..9cd4b3e
--- /dev/null
+++ b/build_info/libplist-proc.control
@@ -0,0 +1,7 @@
+Package: libplist-proc
+Version: @DEB_LIBPLIST_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libpng16-proc.control b/build_info/libpng16-proc.control
new file mode 100644
index 0000000..1eba86b
--- /dev/null
+++ b/build_info/libpng16-proc.control
@@ -0,0 +1,7 @@
+Package: libpng16-proc
+Version: @DEB_LIBPNG16_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libssl-proc.control b/build_info/libssl-proc.control
new file mode 100644
index 0000000..ee3059f
--- /dev/null
+++ b/build_info/libssl-proc.control
@@ -0,0 +1,7 @@
+Package: libssl-proc
+Version: @DEB_OPENSSL_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libusbmuxd-proc.control b/build_info/libusbmuxd-proc.control
new file mode 100644
index 0000000..1e05603
--- /dev/null
+++ b/build_info/libusbmuxd-proc.control
@@ -0,0 +1,8 @@
+Package: libusbmuxd-proc
+Version: @DEB_LIBUSBMUXD_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libplist-proc, libimobiledevice-glue-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libxpwn-proc.control b/build_info/libxpwn-proc.control
new file mode 100644
index 0000000..9c399ed
--- /dev/null
+++ b/build_info/libxpwn-proc.control
@@ -0,0 +1,8 @@
+Package: libxpwn-proc
+Version: @DEB_XPWN_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libssl-proc
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_info/libzip-proc.control b/build_info/libzip-proc.control
new file mode 100644
index 0000000..a1ace41
--- /dev/null
+++ b/build_info/libzip-proc.control
@@ -0,0 +1,8 @@
+Package: libzip-proc
+Version: @DEB_LIBZIP_V@
+Architecture: @DEB_ARCH@
+Maintainer: @DEB_MAINTAINER@
+Depends: libssl-proc (>= 1.1.0)
+Section: Libraries
+Priority: optional
+Description: For use in Github Actions macOS CI, installs to /Users/runner/Procursus/build_base
diff --git a/build_tools/versions.json b/build_tools/versions.json
new file mode 100644
index 0000000..8560609
--- /dev/null
+++ b/build_tools/versions.json
@@ -0,0 +1,132 @@
+{
+  "versions": {
+    "futurerestore": {
+      "version": "253",
+      "version2": "2.0.0-test+git20211006",
+      "commit": "b49aad07f19b0b17d4ae97ab89675c971747b989",
+      "url": "https://github.com/m1stadev/futurerestore",
+      "branch": "test"
+    },
+    "idevicerestore_submodule": {
+      "version": "826",
+      "version2": "826+git20211006",
+      "commit": "988bd03b5acd8692b23969a7e24b290abed75b5a",
+      "url": "https://github.com/m1stadev/idevicerestore",
+      "branch": "test"
+    },
+    "tsschecker": {
+      "version": "357",
+      "version2": "357+git20210927",
+      "commit": "8c5122131cf7b7a2493a82674551787e7a4285f4",
+      "url": "https://github.com/1Conan/tsschecker",
+      "brah": "master"
+    },
+    "openssl": {
+      "version": "24070",
+      "version2": "1.1.1l+git20211009",
+      "commit": "a653e037ef0236ea9cd84ec4c94f0bb94aca56ab",
+      "url": "https://github.com/openssl/openssl",
+      "branch": "OpenSSL_1_1_1-stable"
+    },
+    "libzip": {
+      "version": "3062",
+      "version2": "1.8.0+git20210928",
+      "commit": "76df02f86b9746e139fd9fc934a70e3a21bbc557",
+      "url": "https://github.com/nih-at/libzip",
+      "branch": "master"
+    },
+    "libpng16": {
+      "version": "4098",
+      "version2": "1.6.37+git20210312",
+      "commit": "a37d4836519517bdce6cb9d956092321eca3e73b",
+      "url": "https://github.com/glennrp/libpng",
+      "branch": "libpng16"
+    },
+    "libplist": {
+      "version": "818",
+      "version2": "2.2.0+git20210921",
+      "commit": "cf7a3f3d7c06b197ee71c9f97eb9aa05f26d63b5",
+      "url": "https://github.com/libimobiledevice/libplist",
+      "branch": "master"
+    },
+    "libimobiledevice_glue": {
+      "version": "19",
+      "version2": "1.0.0+git20210925",
+      "commit": "499a5578b15235d00bc492068635de45bec1807d",
+      "url": "https://github.com/libimobiledevice/libimobiledevice-glue",
+      "branch": "master"
+    },
+    "libusbmuxd": {
+      "version": "192",
+      "version2": "2.0.2+git20210913",
+      "commit": "2ec5354a6ff2ba5e2740eabe7402186f29294f79",
+      "url": "https://github.com/libimobiledevice/libusbmuxd",
+      "branch": "master"
+    },
+    "libimobiledevice": {
+      "version": "1654",
+      "version2": "1.3.0+git20210921",
+      "commit": "b3d35fbcf7a1ac669c2e80fbd58920941a5d4c0c",
+      "url": "https://github.com/libimobiledevice/libimobiledevice",
+      "branch": "master"
+    },
+    "libirecovery": {
+      "version": "321",
+      "version2": "1.0.0+git20210923",
+      "commit": "0165076dedcad80c9a6886424cdc0992a88ce2ae",
+      "url": "https://github.com/libimobiledevice/libirecovery",
+      "branch": "master"
+    },
+    "libgeneral": {
+      "version": "56",
+      "version2": "56+git20210702",
+      "commit": "e0d98cbeedece5d62e3e9432c3ed37cd87da5338",
+      "url": "https://github.com/tihmstar/libgeneral",
+      "branch": "master"
+    },
+    "libfragmentzip": {
+      "version": "64",
+      "version2": "64+git20210209",
+      "commit": "aaf6fae83a0aa6f7aae1c94721857076d04a14e8",
+      "url": "https://github.com/tihmstar/libfragmentzip",
+      "branch": "master"
+    },
+    "img4tool": {
+      "version": "197",
+      "version2": "197+git20210129",
+      "commit": "aca6cf005c94caf135023263cbb5c61a0081804f",
+      "url": "https://github.com/tihmstar/img4tool",
+      "branch": "master"
+    },
+    "libinsn": {
+      "version": "37",
+      "version2": "37+git20210425",
+      "commit": "e795956b0c0e0c2fcbb074ee1f1cfd84e98f0918",
+      "url": "https://github.com/tihmstar/libinsn",
+      "branch": "master"
+    },
+    "xpwn": {
+      "version": "403",
+      "version2": "0.5.8+git20210410",
+      "commit": "f6baa79ee898657229c71c8fbcc2c7e39f31f35a",
+      "url": "https://github.com/nyuszika7h/xpwn",
+      "branch": "master"
+    },
+    "liboffsetfinder64": {
+      "version": "142",
+      "version2": "142+git20211011",
+      "commit": "b6660b8e4e9df1e0e13f3dad870d764f71994a6c",
+      "url": "https://github.com/Cryptiiiic/liboffsetfinder64",
+      "branch": "cryptic"
+    },
+    "libipatcher": {
+      "version": "86",
+      "version2": "86+git20210810",
+      "commit": "6a3b358b673e74c2be9f9b8a74a63b80dd94abf1",
+      "url": "https://github.com/Cryptiiiic/libipatcher",
+      "branch": "main"
+    }
+  },
+  "lastupdate": "1633942188"
+}
+
diff --git a/makefiles/curl.mk b/makefiles/curl.mk
index 84ab908..4c9282c 100644
--- a/makefiles/curl.mk
+++ b/makefiles/curl.mk
@@ -3,7 +3,7 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS  += curl
-CURL_VERSION := 7.77.0
+CURL_VERSION := 7.78.0
 DEB_CURL_V   ?= $(CURL_VERSION)
 
 curl-setup: setup
diff --git a/makefiles/futurerestore.mk b/makefiles/futurerestore.mk
index 3a15cdc..42735d8 100644
--- a/makefiles/futurerestore.mk
+++ b/makefiles/futurerestore.mk
@@ -3,31 +3,25 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS                         += futurerestore
-FUTURERESTORE_VERSION               := 195
-FUTURERESTORE_COMMIT                := 55db758b5d4d6c08daa48af9aad1abf2b6466f36
-FUTURERESTORE_IDEVICERESTORE_COMMIT := d7d9996b3910902a56462fa8d9dc5909fcf8f4c9
-DEB_FUTURERESTORE_V                 ?= $(FUTURERESTORE_VERSION)-1
+DEB_FUTURERESTORE_V                 ?= $(FUTURERESTORE_VERSION)
 
 futurerestore-setup: setup tsschecker-setup
-	$(call GITHUB_ARCHIVE,m1stadev,futurerestore,$(FUTURERESTORE_COMMIT),$(FUTURERESTORE_COMMIT))
-	$(call GITHUB_ARCHIVE,m1stadev,idevicerestore,$(FUTURERESTORE_IDEVICERESTORE_COMMIT),$(FUTURERESTORE_IDEVICERESTORE_COMMIT))
-	$(call EXTRACT_TAR,futurerestore-$(FUTURERESTORE_COMMIT).tar.gz,futurerestore-$(FUTURERESTORE_COMMIT),futurerestore)
-
-	-rmdir $(BUILD_WORK)/futurerestore/external/{idevicerestore,tsschecker}
-	$(call EXTRACT_TAR,idevicerestore-$(FUTURERESTORE_IDEVICERESTORE_COMMIT).tar.gz,idevicerestore-$(FUTURERESTORE_IDEVICERESTORE_COMMIT),futurerestore/external/idevicerestore)
-	cp -R $(BUILD_WORK)/tsschecker $(BUILD_WORK)/futurerestore/external
-
-	sed -i 's/git rev\-list \-\-count HEAD/printf ${FUTURERESTORE_VERSION}/g' $(BUILD_WORK)/futurerestore/configure.ac
-	sed -i 's/git rev\-parse HEAD/printf ${FUTURERESTORE_COMMIT}/g' $(BUILD_WORK)/futurerestore/configure.ac
+	ln -sf ${BASE}/../../../futurerestore $(BUILD_WORK)/
 
 ifneq ($(wildcard $(BUILD_WORK)/futurerestore/.build_complete),)
 futurerestore:
 	@echo "Using previously built futurerestore."
 else
 futurerestore: futurerestore-setup libirecovery openssl libusbmuxd libimobiledevice img4tool libgeneral libzip libfragmentzip libipatcher
+	fd -pe dylib -X rm \; '.*' build_*
 	cd $(BUILD_WORK)/futurerestore && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
 		--disable-silent-rules \
+		libfragmentzip_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lcurl" \
+		libfragmentzip_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
+		libcurl_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lcurl" \
+		libcurl_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
+		LDFLAGS="$(LDFLAGS) -L$(TARGET_SYSROOT)/usr/lib -lcompression -framework CoreFoundation -framework IOKit -L$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib -lfragmentzip -lusbmuxd-2.0 -limobiledevice-glue-1.0 -limobiledevice-1.0 -L$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/xpwn -lcommon -lxpwn" \
 		zlib_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lz" \
 		zlib_CFLAGS="-I$(TARGET_SYSROOT)/usr/include"
 	+$(MAKE) -C $(BUILD_WORK)/futurerestore
diff --git a/makefiles/idevicerestore.mk b/makefiles/idevicerestore.mk
index 526a712..64fe396 100644
--- a/makefiles/idevicerestore.mk
+++ b/makefiles/idevicerestore.mk
@@ -3,24 +3,28 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS            += idevicerestore
-IDEVICERESTORE_COMMIT  := a2010182daa49f9f3bb63e8993908f8cdbca8b5e
-IDEVICERESTORE_VERSION := 1.0.0+git20210526.$(shell echo $(IDEVICERESTORE_COMMIT) | cut -c -7)
+#IDEVICERESTORE_COMMIT  := a2010182daa49f9f3bb63e8993908f8cdbca8b5e
+#IDEVICERESTORE_VERSION := 1.0.0+git20210526.$(shell echo $(IDEVICERESTORE_COMMIT) | cut -c -7)
 DEB_IDEVICERESTORE_V   ?= $(IDEVICERESTORE_VERSION)
 
 idevicerestore-setup: setup
-	$(call GITHUB_ARCHIVE,libimobiledevice,idevicerestore,$(IDEVICERESTORE_COMMIT),$(IDEVICERESTORE_COMMIT))
-	$(call EXTRACT_TAR,idevicerestore-$(IDEVICERESTORE_COMMIT).tar.gz,idevicerestore-$(IDEVICERESTORE_COMMIT),idevicerestore)
+	ln -sf ~/source/idevicerestore $(BUILD_WORK)/
+#	$(call GITHUB_ARCHIVE,libimobiledevice,idevicerestore,$(IDEVICERESTORE_COMMIT),$(IDEVICERESTORE_COMMIT))
+#	$(call EXTRACT_TAR,idevicerestore-$(IDEVICERESTORE_COMMIT).tar.gz,idevicerestore-$(IDEVICERESTORE_COMMIT),idevicerestore)
 
 ifneq ($(wildcard $(BUILD_WORK)/idevicerestore/.build_complete),)
 idevicerestore:
 	@echo "Using previously built idevicerestore."
 else
-idevicerestore: idevicerestore-setup curl libimobiledevice libirecovery libplist libzip
+idevicerestore: idevicerestore-setup libimobiledevice libirecovery libplist libzip
+	fd -pe dylib -X rm \; '.*' build_*
 	cd $(BUILD_WORK)/idevicerestore && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
+		libcurl_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lcurl" \
+		libcurl_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
 		zlib_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lz" \
-		zlib_CFLAGS="-I$(TARGET_SYSROOT)/usr/include"
-	+$(MAKE) -C $(BUILD_WORK)/idevicerestore
+		zlib_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
+		LDFLAGS="$(LDFLAGS) -L$(TARGET_SYSROOT)/usr/lib -framework CoreFoundation -framework IOKit -L$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib -limobiledevice-glue-1.0 -lusbmuxd-2.0"
 	+$(MAKE) -C $(BUILD_WORK)/idevicerestore install \
 		DESTDIR="$(BUILD_STAGE)/idevicerestore"
 	$(call AFTER_BUILD)
diff --git a/makefiles/img4tool.mk b/makefiles/img4tool.mk
index 7c2ce9d..3103a97 100644
--- a/makefiles/img4tool.mk
+++ b/makefiles/img4tool.mk
@@ -3,13 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS      += img4tool
-IMG4TOOL_VERSION := 197
-IMG4TOOL_COMMIT  := aca6cf005c94caf135023263cbb5c61a0081804f
-DEB_IMG4TOOL_V   ?= $(IMG4TOOL_VERSION)-1
+IMG4TOOL_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.img4tool.version2' | tr -d '\n')
+IMG4TOOL_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.img4tool.commit' | tr -d '\n')
+DEB_IMG4TOOL_V   ?= $(IMG4TOOL_VERSION)
 
 img4tool-setup: setup
-	$(call GITHUB_ARCHIVE,tihmstar,img4tool,$(IMG4TOOL_VERSION),$(IMG4TOOL_VERSION))
-	$(call EXTRACT_TAR,img4tool-$(IMG4TOOL_VERSION).tar.gz,img4tool-$(IMG4TOOL_VERSION),img4tool)
+	$(call GITHUB_ARCHIVE,tihmstar,img4tool,$(IMG4TOOL_COMMIT),$(IMG4TOOL_COMMIT))
+	$(call EXTRACT_TAR,img4tool-$(IMG4TOOL_COMMIT).tar.gz,img4tool-$(IMG4TOOL_COMMIT),img4tool)
 	sed -i 's/git rev\-list \-\-count HEAD/printf ${IMG4TOOL_VERSION}/g' $(BUILD_WORK)/img4tool/configure.ac
 	sed -i 's/git rev\-parse HEAD/printf ${IMG4TOOL_COMMIT}/g' $(BUILD_WORK)/img4tool/configure.ac
 
@@ -20,7 +20,6 @@ else
 img4tool: img4tool-setup openssl libplist libgeneral
 	cd $(BUILD_WORK)/img4tool && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/img4tool
 	+$(MAKE) -C $(BUILD_WORK)/img4tool install \
 		DESTDIR="$(BUILD_STAGE)/img4tool"
 	$(call AFTER_BUILD,copy)
@@ -29,26 +28,18 @@ endif
 img4tool-package: img4tool-stage
 	# img4tool.mk Package Structure
 	rm -rf $(BUILD_DIST)/*img4tool*/
-	mkdir -p $(BUILD_DIST)/{img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin,libimg4tool0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib,libimg4tool-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{lib/pkgconfig,include}}
+	mkdir -p $(BUILD_DIST)/libimg4tool-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/img4tool}
 
-	# img4tool.mk Prep img4tool
-	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin/img4tool $(BUILD_DIST)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin
-
-	# img4tool.mk Prep libimg4tool0
-	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libimg4tool.0.dylib $(BUILD_DIST)/libimg4tool0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# img4tool.mk Prep libimg4tool-dev
-	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{libimg4tool.dylib,pkgconfig} $(BUILD_DIST)/libimg4tool-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/img4tool $(BUILD_DIST)/libimg4tool-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include
+	# img4tool.mk Prep libimg4tool-proc
+	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libimg4tool-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/img4tool/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libimg4tool-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libimg4tool-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/img4tool/.build_complete
 
 	# img4tool.mk Sign
-	$(call SIGN,img4tool,general.xml)
-	$(call SIGN,libimg4tool0,general.xml)
+	$(call SIGN,libimg4tool-proc,general.xml)
 
 	# img4tool.mk Make .debs
-	$(call PACK,img4tool,DEB_IMG4TOOL_V)
-	$(call PACK,libimg4tool0,DEB_IMG4TOOL_V)
-	$(call PACK,libimg4tool-dev,DEB_IMG4TOOL_V)
+	$(call PACK,libimg4tool-proc,DEB_IMG4TOOL_V)
 
 	# img4tool.mk Build cleanup
 	rm -rf $(BUILD_DIST)/*img4tool*/
diff --git a/makefiles/libfragmentzip.mk b/makefiles/libfragmentzip.mk
index 28a5846..fef6b1d 100644
--- a/makefiles/libfragmentzip.mk
+++ b/makefiles/libfragmentzip.mk
@@ -3,14 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS            += libfragmentzip
-LIBFRAGMENTZIP_VERSION := 60
-LIBFRAGMENTZIP_COMMIT  := 120447d0f410dffb49948fa155467fc5d91ca3c8
-DEB_LIBFRAGMENTZIP_V   ?= $(LIBFRAGMENTZIP_VERSION)-3
+LIBFRAGMENTZIP_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libfragmentzip.version' | tr -d '\n')
+LIBFRAGMENTZIP_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libfragmentzip.commit' | tr -d '\n')
+DEB_LIBFRAGMENTZIP_V   ?= $(LIBFRAGMENTZIP_VERSION)
 
 libfragmentzip-setup: setup
-	$(call GITHUB_ARCHIVE,tihmstar,libfragmentzip,$(LIBFRAGMENTZIP_VERSION),$(LIBFRAGMENTZIP_VERSION))
-	$(call EXTRACT_TAR,libfragmentzip-$(LIBFRAGMENTZIP_VERSION).tar.gz,libfragmentzip-$(LIBFRAGMENTZIP_VERSION),libfragmentzip)
-	sed -i 's/@libz_requires@//;s/\(Libs:.*\)/\1 -lz/' $(BUILD_WORK)/libfragmentzip/libfragmentzip.pc.in
+	$(call GITHUB_ARCHIVE,tihmstar,libfragmentzip,$(LIBFRAGMENTZIP_COMMIT),$(LIBFRAGMENTZIP_COMMIT))
+	$(call EXTRACT_TAR,libfragmentzip-$(LIBFRAGMENTZIP_COMMIT).tar.gz,libfragmentzip-$(LIBFRAGMENTZIP_COMMIT),libfragmentzip)
 	sed -i 's/git rev\-list \-\-count HEAD/printf ${LIBFRAGMENTZIP_VERSION}/g' $(BUILD_WORK)/libfragmentzip/configure.ac
 	sed -i 's/git rev\-parse HEAD/printf ${LIBFRAGMENTZIP_COMMIT}/g' $(BUILD_WORK)/libfragmentzip/configure.ac
 
@@ -18,12 +17,13 @@ ifneq ($(wildcard $(BUILD_WORK)/libfragmentzip/.build_complete),)
 libfragmentzip:
 	@echo "Using previously built libfragmentzip."
 else
-libfragmentzip: libfragmentzip-setup libgeneral libzip curl
+libfragmentzip: libfragmentzip-setup libgeneral libzip
 	cd $(BUILD_WORK)/libfragmentzip && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
+		curl_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lz" \
+		curl_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
 		zlib_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lz" \
 		zlib_CFLAGS="-I$(TARGET_SYSROOT)/usr/include"
-	+$(MAKE) -C $(BUILD_WORK)/libfragmentzip
 	+$(MAKE) -C $(BUILD_WORK)/libfragmentzip install \
 		DESTDIR="$(BUILD_STAGE)/libfragmentzip"
 	$(call AFTER_BUILD,copy)
@@ -31,24 +31,21 @@ endif
 
 libfragmentzip-package: libfragmentzip-stage
 	# libfragmentzip.mk Package Structure
-	rm -rf $(BUILD_DIST)/libfragmentzip{0,-dev}
-	mkdir -p $(BUILD_DIST)/libfragmentzip{0,-dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
+	rm -rf $(BUILD_DIST)/libfragmentzip-proc
+	mkdir -p $(BUILD_DIST)/libfragmentzip-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libfragmentzip}
 
-	# libfragmentzip.mk Prep libfragmentzip0
-	cp -a $(BUILD_STAGE)/libfragmentzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libfragmentzip.0.dylib $(BUILD_DIST)/libfragmentzip0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libfragmentzip.mk Prep libfragmentzip-dev
-	cp -a $(BUILD_STAGE)/libfragmentzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libfragmentzip.0.dylib) $(BUILD_DIST)/libfragmentzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libfragmentzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libfragmentzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libfragmentzip.mk Prep libfragmentzip-proc
+	cp -a $(BUILD_STAGE)/libfragmentzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libfragmentzip-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libfragmentzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libfragmentzip-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libfragmentzip-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libfragmentzip/.build_complete
 
 	# libfragmentzip.mk Sign
-	$(call SIGN,libfragmentzip0,general.xml)
+	$(call SIGN,libfragmentzip-proc,general.xml)
 
 	# libfragmentzip.mk Make .debs
-	$(call PACK,libfragmentzip0,DEB_LIBFRAGMENTZIP_V)
-	$(call PACK,libfragmentzip-dev,DEB_LIBFRAGMENTZIP_V)
+	$(call PACK,libfragmentzip-proc,DEB_LIBFRAGMENTZIP_V)
 
 	# libfragmentzip.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libfragmentzip{0,-dev}
+	rm -rf $(BUILD_DIST)/libfragmentzip-proc
 
 .PHONY: libfragmentzip libfragmentzip-package
diff --git a/makefiles/libgeneral.mk b/makefiles/libgeneral.mk
index 48a1891..6caee9b 100644
--- a/makefiles/libgeneral.mk
+++ b/makefiles/libgeneral.mk
@@ -3,13 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS        += libgeneral
-LIBGENERAL_VERSION := 54
-LIBGENERAL_COMMIT  := b04a27d0584c4c10c4b376325bb928c0ad12e285
-DEB_LIBGENERAL_V   ?= $(LIBGENERAL_VERSION)-1
+LIBGENERAL_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libgeneral.version2' | tr -d '\n')
+LIBGENERAL_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libgeneral.commit' | tr -d '\n')
+DEB_LIBGENERAL_V   ?= $(LIBGENERAL_VERSION)
 
 libgeneral-setup: setup
-	$(call GITHUB_ARCHIVE,tihmstar,libgeneral,$(LIBGENERAL_VERSION),$(LIBGENERAL_VERSION))
-	$(call EXTRACT_TAR,libgeneral-$(LIBGENERAL_VERSION).tar.gz,libgeneral-$(LIBGENERAL_VERSION),libgeneral)
+	$(call GITHUB_ARCHIVE,tihmstar,libgeneral,$(LIBGENERAL_COMMIT),$(LIBGENERAL_COMMIT))
+	$(call EXTRACT_TAR,libgeneral-$(LIBGENERAL_COMMIT).tar.gz,libgeneral-$(LIBGENERAL_COMMIT),libgeneral)
 	
 	sed -i 's/git rev\-list \-\-count HEAD/printf ${LIBGENERAL_VERSION}/g' $(BUILD_WORK)/libgeneral/configure.ac
 	sed -i 's/git rev\-parse HEAD/printf ${LIBGENERAL_COMMIT}/g' $(BUILD_WORK)/libgeneral/configure.ac
@@ -21,7 +21,6 @@ else
 libgeneral: libgeneral-setup
 	cd $(BUILD_WORK)/libgeneral && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/libgeneral
 	+$(MAKE) -C $(BUILD_WORK)/libgeneral install \
 		DESTDIR="$(BUILD_STAGE)/libgeneral"
 	$(call AFTER_BUILD,copy)
@@ -29,24 +28,21 @@ endif
 
 libgeneral-package: libgeneral-stage
 	# libgeneral.mk Package Structure
-	rm -rf $(BUILD_DIST)/libgeneral{0,-dev}
-	mkdir -p $(BUILD_DIST)/libgeneral{0,-dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
+	rm -rf $(BUILD_DIST)/libgeneral-proc
+	mkdir -p $(BUILD_DIST)/libgeneral-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libgeneral}
 
-	# libgeneral.mk Prep libgeneral0
-	cp -a $(BUILD_STAGE)/libgeneral/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libgeneral.0.dylib $(BUILD_DIST)/libgeneral0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libgeneral.mk Prep libgeneral-dev
-	cp -a $(BUILD_STAGE)/libgeneral/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libgeneral.0.dylib) $(BUILD_DIST)/libgeneral-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libgeneral/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libgeneral-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libgeneral.mk Prep libgeneral-proc
+	cp -a $(BUILD_STAGE)/libgeneral/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libgeneral-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libgeneral/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libgeneral-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libgeneral-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libgeneral/.build_complete
 
 	# libgeneral.mk Sign
-	$(call SIGN,libgeneral0,general.xml)
+	$(call SIGN,libgeneral-proc,general.xml)
 
 	# libgeneral.mk Make .debs
-	$(call PACK,libgeneral0,DEB_LIBGENERAL_V)
-	$(call PACK,libgeneral-dev,DEB_LIBGENERAL_V)
+	$(call PACK,libgeneral-proc,DEB_LIBGENERAL_V)
 
 	# libgeneral.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libgeneral{0,-dev}
+	rm -rf $(BUILD_DIST)/libgeneral-proc
 
 .PHONY: libgeneral libgeneral-package
diff --git a/makefiles/libimobiledevice-glue.mk b/makefiles/libimobiledevice-glue.mk
new file mode 100644
index 0000000..e41c496
--- /dev/null
+++ b/makefiles/libimobiledevice-glue.mk
@@ -0,0 +1,46 @@
+ifneq ($(PROCURSUS),1)
+$(error Use the main Makefile)
+endif
+
+SUBPROJECTS              += libimobiledevice-glue
+LIBIMOBILEDEVICEGLUE_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libimobiledevice_glue.commit' | tr -d '\n')
+LIBIMOBILEDEVICEGLUE_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libimobiledevice_glue.version2' | tr -d '\n').$(shell echo $(LIBIMOBILEDEVICEGLUE_COMMIT) | cut -c -7)
+DEB_LIBIMOBILEDEVICEGLUE_V   ?= $(LIBIMOBILEDEVICEGLUE_VERSION)
+
+libimobiledevice-glue-setup: setup
+	$(call GITHUB_ARCHIVE,libimobiledevice,libimobiledevice-glue,$(LIBIMOBILEDEVICEGLUE_COMMIT),$(LIBIMOBILEDEVICEGLUE_COMMIT))
+	$(call EXTRACT_TAR,libimobiledevice-glue-$(LIBIMOBILEDEVICEGLUE_COMMIT).tar.gz,libimobiledevice-glue-$(LIBIMOBILEDEVICEGLUE_COMMIT),libimobiledevice-glue)
+
+ifneq ($(wildcard $(BUILD_WORK)/libimobiledevice-glue/.build_complete),)
+libimobiledevice-glue:
+	@echo "Using previously built libimobiledevice-glue."
+else
+libimobiledevice-glue: libimobiledevice-glue-setup libplist
+	cd $(BUILD_WORK)/libimobiledevice-glue && ./autogen.sh \
+		$(DEFAULT_CONFIGURE_FLAGS) \
+		--without-cython
+	+$(MAKE) -C $(BUILD_WORK)/libimobiledevice-glue install \
+		DESTDIR="$(BUILD_STAGE)/libimobiledevice-glue"
+	$(call AFTER_BUILD,copy)
+endif
+
+libimobiledevice-glue-package: libimobiledevice-glue-stage
+	# libimobiledevice-glue.mk Package Structure
+	rm -rf $(BUILD_DIST)/libimobiledevice-glue-proc
+	mkdir -p $(BUILD_DIST)/libimobiledevice-glue-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libimobiledevice-glue}
+
+	# libimobiledevice-glue.mk Prep libimobiledevice-glue-proc
+	cp -a $(BUILD_STAGE)/libimobiledevice-glue/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libimobiledevice-glue-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libimobiledevice-glue/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libimobiledevice-glue-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libimobiledevice-glue-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libimobiledevice-glue/.build_complete
+
+	# libimobiledevice-glue.mk Sign
+	$(call SIGN,libimobiledevice-glue-proc,general.xml)
+
+	# libimobiledevice-glue.mk Make .debs
+	$(call PACK,libimobiledevice-glue-proc,DEB_LIBIMOBILEDEVICEGLUE_V)
+
+	# libimobiledevice-glue.mk Build cleanup
+	rm -rf $(BUILD_DIST)/libimobiledevice-glue-proc
+
+.PHONY: libimobiledevice-glue libimobiledevice-glue-package
diff --git a/makefiles/libimobiledevice.mk b/makefiles/libimobiledevice.mk
index e05b026..f59c3c6 100644
--- a/makefiles/libimobiledevice.mk
+++ b/makefiles/libimobiledevice.mk
@@ -3,8 +3,8 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS              += libimobiledevice
-LIBIMOBILEDEVICE_COMMIT  := 25059d4c7d75e03aab516af2929d7c6e6d4c17de
-LIBIMOBILEDEVICE_VERSION := 1.3.0+git20210304.$(shell echo $(LIBIMOBILEDEVICE_COMMIT) | cut -c -7)
+LIBIMOBILEDEVICE_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libimobiledevice.commit' | tr -d '\n')
+LIBIMOBILEDEVICE_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libimobiledevice.version2' | tr -d '\n').$(shell echo $(LIBIMOBILEDEVICE_COMMIT) | cut -c -7)
 DEB_LIBIMOBILEDEVICE_V   ?= $(LIBIMOBILEDEVICE_VERSION)
 
 libimobiledevice-setup: setup
@@ -15,11 +15,12 @@ ifneq ($(wildcard $(BUILD_WORK)/libimobiledevice/.build_complete),)
 libimobiledevice:
 	@echo "Using previously built libimobiledevice."
 else
-libimobiledevice: libimobiledevice-setup libusbmuxd libplist openssl
+libimobiledevice: libimobiledevice-setup libusbmuxd libplist openssl libimobiledevice-glue
+	fd -pe dylib -X rm \; '.*' build_*
 	cd $(BUILD_WORK)/libimobiledevice && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
+		--disable-shared \
 		--without-cython
-	+$(MAKE) -C $(BUILD_WORK)/libimobiledevice
 	+$(MAKE) -C $(BUILD_WORK)/libimobiledevice install \
 		DESTDIR="$(BUILD_STAGE)/libimobiledevice"
 	$(call AFTER_BUILD,copy)
@@ -27,31 +28,21 @@ endif
 
 libimobiledevice-package: libimobiledevice-stage
 	# libimobiledevice.mk Package Structure
-	rm -rf $(BUILD_DIST)/libimobiledevice{6,-dev,-utils}
-	mkdir -p $(BUILD_DIST)/libimobiledevice6/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libimobiledevice-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libimobiledevice-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	rm -rf $(BUILD_DIST)/libimobiledevice-proc
+	mkdir -p $(BUILD_DIST)/libimobiledevice-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libimobiledevice}
 
-	# libimobiledevice.mk Prep libimobiledevice6
-	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libimobiledevice-1.0.6.dylib $(BUILD_DIST)/libimobiledevice6/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libimobiledevice.mk Prep libimobiledevice-dev
-	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{pkgconfig,libimobiledevice-1.0.{a,dylib}} $(BUILD_DIST)/libimobiledevice-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libimobiledevice-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libimobiledevice.mk Prep libimobiledevice-utils
-	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,share} $(BUILD_DIST)/libimobiledevice-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libimobiledevice.mk Prep libimobiledevice-proc
+	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libimobiledevice-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libimobiledevice/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libimobiledevice-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libimobiledevice-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libimobiledevice/.build_complete
 
 	# libimobiledevice.mk Sign
-	$(call SIGN,libimobiledevice6,general.xml)
-	$(call SIGN,libimobiledevice-utils,general.xml)
+	$(call SIGN,libimobiledevice-dev,general.xml)
 
 	# libimobiledevice.mk Make .debs
-	$(call PACK,libimobiledevice6,DEB_LIBIMOBILEDEVICE_V)
-	$(call PACK,libimobiledevice-dev,DEB_LIBIMOBILEDEVICE_V)
-	$(call PACK,libimobiledevice-utils,DEB_LIBIMOBILEDEVICE_V)
+	$(call PACK,libimobiledevice-proc,DEB_LIBIMOBILEDEVICE_V)
 
 	# libimobiledevice.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libimobiledevice{6,-dev,-utils}
+	rm -rf $(BUILD_DIST)/libimobiledevice-proc
 
 .PHONY: libimobiledevice libimobiledevice-package
diff --git a/makefiles/libinsn.mk b/makefiles/libinsn.mk
index c1f5f54..c7d587e 100644
--- a/makefiles/libinsn.mk
+++ b/makefiles/libinsn.mk
@@ -3,9 +3,9 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS     += libinsn
-LIBINSN_VERSION := 35
-LIBINSN_COMMIT  := 64124fd2b1b57d7b76a0e2b0c06434a7048758d2
-DEB_LIBINSN_V   ?= $(LIBINSN_VERSION)-1
+LIBINSN_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libinsn.version2' | tr -d '\n')
+LIBINSN_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libinsn.commit' | tr -d '\n')
+DEB_LIBINSN_V   ?= $(LIBINSN_VERSION)
 
 libinsn-setup: setup
 	$(call GITHUB_ARCHIVE,tihmstar,libinsn,$(LIBINSN_COMMIT),$(LIBINSN_COMMIT))
@@ -20,7 +20,6 @@ else
 libinsn: libinsn-setup libgeneral
 	cd $(BUILD_WORK)/libinsn && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/libinsn
 	+$(MAKE) -C $(BUILD_WORK)/libinsn install \
 		DESTDIR="$(BUILD_STAGE)/libinsn"
 	$(call AFTER_BUILD,copy)
@@ -28,24 +27,21 @@ endif
 
 libinsn-package: libinsn-stage
 	# libinsn.mk Package Structure
-	rm -rf $(BUILD_DIST)/libinsn{0,-dev}
-	mkdir -p $(BUILD_DIST)/libinsn{0,-dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
+	rm -rf $(BUILD_DIST)/libinsn-proc
+	mkdir -p $(BUILD_DIST)/libinsn-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libinsn}
 
-	# libinsn.mk Prep libinsn0
-	cp -a $(BUILD_STAGE)/libinsn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libinsn.0.dylib $(BUILD_DIST)/libinsn0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libinsn.mk Prep libinsn-dev
-	cp -a $(BUILD_STAGE)/libinsn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libinsn.0.dylib) $(BUILD_DIST)/libinsn-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libinsn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libinsn-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libinsn.mk Prep libinsn-proc
+	cp -a $(BUILD_STAGE)/libinsn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libinsn-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libinsn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libinsn-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libinsn-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libinsn/.build_complete
 
 	# libinsn.mk Sign
-	$(call SIGN,libinsn0,general.xml)
+	$(call SIGN,libinsn-proc,general.xml)
 
 	# libinsn.mk Make .debs
-	$(call PACK,libinsn0,DEB_LIBINSN_V)
-	$(call PACK,libinsn-dev,DEB_LIBINSN_V)
+	$(call PACK,libinsn-proc,DEB_LIBINSN_V)
 
 	# libinsn.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libinsn{0,-dev}
+	rm -rf $(BUILD_DIST)/libinsn-proc
 
 .PHONY: libinsn libinsn-package
diff --git a/makefiles/libipatcher.mk b/makefiles/libipatcher.mk
index f077742..9255e15 100644
--- a/makefiles/libipatcher.mk
+++ b/makefiles/libipatcher.mk
@@ -3,17 +3,17 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS         += libipatcher
-LIBIPATCHER_VERSION := 81
-LIBIPATCHER_COMMIT  := ad44d0da23f5120c3c77a72062bd627c50f37e71
-DEB_LIBIPATCHER_V   ?= $(LIBIPATCHER_VERSION)-1
+LIBIPATCHER_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libipatcher.version2' | tr -d '\n')
+LIBIPATCHER_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libipatcher.commit' | tr -d '\n')
+DEB_LIBIPATCHER_V   ?= $(LIBIPATCHER_VERSION)
 
 libipatcher-setup: setup
-	$(call GITHUB_ARCHIVE,tihmstar,libipatcher,$(LIBIPATCHER_VERSION),$(LIBIPATCHER_VERSION))
-	$(call EXTRACT_TAR,libipatcher-$(LIBIPATCHER_VERSION).tar.gz,libipatcher-$(LIBIPATCHER_VERSION),libipatcher)
+	$(call GITHUB_ARCHIVE,Cryptiiiic,libipatcher,$(LIBIPATCHER_COMMIT),$(LIBIPATCHER_COMMIT))
+	$(call EXTRACT_TAR,libipatcher-$(LIBIPATCHER_COMMIT).tar.gz,libipatcher-$(LIBIPATCHER_COMMIT),libipatcher)
 
+	rm -rf $(BUILD_WORK)/libipatcher/external/{jssy,iBoot32Patcher}
 	$(call GITHUB_ARCHIVE,tihmstar,iBoot32Patcher,master,master)
 	$(call GITHUB_ARCHIVE,tihmstar,jssy,master,master)
-	rm -rf $(BUILD_WORK)/libipatcher/external/{jssy,iBoot32Patcher}
 	$(call EXTRACT_TAR,jssy-master.tar.gz,jssy-master,libipatcher/external/jssy)
 	$(call EXTRACT_TAR,iBoot32Patcher-master.tar.gz,iBoot32Patcher-master,libipatcher/external/iBoot32Patcher)
 
@@ -27,39 +27,35 @@ ifneq ($(wildcard $(BUILD_WORK)/libipatcher/.build_complete),)
 libipatcher:
 	@echo "Using previously built libipatcher."
 else
-libipatcher: libipatcher-setup libpng16 openssl img4tool liboffsetfinder64 libgeneral libplist curl xpwn
+libipatcher: libipatcher-setup libpng16 openssl img4tool liboffsetfinder64 libgeneral libplist xpwn
 	cd $(BUILD_WORK)/libipatcher && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
 		CFLAGS="$(CFLAGS) -I$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/xpwn" \
 		CPPFLAGS="$(CPPFLAGS) -I$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/xpwn" \
 		LDFLAGS="$(LDFLAGS) -L$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/xpwn"
-	+$(MAKE) -C $(BUILD_WORK)/libipatcher \
-		LIBS="-lcurl"
 	+$(MAKE) -C $(BUILD_WORK)/libipatcher install \
+		LIBS="-lcurl" \
 		DESTDIR="$(BUILD_STAGE)/libipatcher"
 	$(call AFTER_BUILD,copy)
 endif
 
 libipatcher-package: libipatcher-stage
 	# libipatcher.mk Package Structure
-	rm -rf $(BUILD_DIST)/libipatcher{0,-dev}
-	mkdir -p $(BUILD_DIST)/libipatcher{0,-dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libipatcher.mk Prep libipatcher0
-	cp -a $(BUILD_STAGE)/libipatcher/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libipatcher.0.dylib $(BUILD_DIST)/libipatcher0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
+	rm -rf $(BUILD_DIST)/libipatcher-proc
+	mkdir -p $(BUILD_DIST)/libipatcher-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libipatcher}
 
-	# libipatcher.mk Prep libipatcher-dev
-	cp -a $(BUILD_STAGE)/libipatcher/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libipatcher.0.dylib) $(BUILD_DIST)/libipatcher-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libipatcher/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libipatcher-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libipatcher.mk Prep libipatcher-proc
+	cp -a $(BUILD_STAGE)/libipatcher/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libipatcher-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libipatcher/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libipatcher-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libipatcher-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libipatcher/.build_complete
 
 	# libipatcher.mk Sign
-	$(call SIGN,libipatcher0,general.xml)
+	$(call SIGN,libipatcher-proc,general.xml)
 
 	# libipatcher.mk Make .debs
-	$(call PACK,libipatcher0,DEB_LIBIPATCHER_V)
-	$(call PACK,libipatcher-dev,DEB_LIBIPATCHER_V)
+	$(call PACK,libipatcher-proc,DEB_LIBIPATCHER_V)
 
 	# libipatcher.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libipatcher{0,-dev}
+	rm -rf $(BUILD_DIST)/libipatcher-proc
 
 .PHONY: libipatcher libipatcher-package
diff --git a/makefiles/libirecovery.mk b/makefiles/libirecovery.mk
index ff54eb1..592fae0 100644
--- a/makefiles/libirecovery.mk
+++ b/makefiles/libirecovery.mk
@@ -3,8 +3,8 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS          += libirecovery
-LIBIRECOVERY_COMMIT  := 47934949e0015165a4562b08e824adb3f664c0ea
-LIBIRECOVERY_VERSION := 1.0.0+git20210526.$(shell echo $(LIBIRECOVERY_COMMIT) | cut -c -7)
+LIBIRECOVERY_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libirecovery.commit' | tr -d '\n')
+LIBIRECOVERY_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libirecovery.version2' | tr -d '\n').$(shell echo $(LIBIRECOVERY_COMMIT) | cut -c -7)
 DEB_LIBIRECOVERY_V   ?= $(LIBIRECOVERY_VERSION)
 
 libirecovery-setup: setup
@@ -15,12 +15,10 @@ ifneq ($(wildcard $(BUILD_WORK)/libirecovery/.build_complete),)
 libirecovery:
 	@echo "Using previously built libirecovery."
 else
-libirecovery: libirecovery-setup readline libusb
+libirecovery: libirecovery-setup libimobiledevice-glue
 	cd $(BUILD_WORK)/libirecovery && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
-		--with-iokit=no
-	+$(MAKE) -C $(BUILD_WORK)/libirecovery \
-		CFLAGS="$(CFLAGS) -I$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/libusb-1.0"
+		--with-iokit=yes
 	+$(MAKE) -C $(BUILD_WORK)/libirecovery install \
 		DESTDIR=$(BUILD_STAGE)/libirecovery
 	$(call AFTER_BUILD,copy)
@@ -28,31 +26,21 @@ endif
 
 libirecovery-package: libirecovery-stage
 	# libirecovery.mk Package Structure
-	rm -rf $(BUILD_DIST)/libirecovery{3,-dev,-utils}
-	mkdir -p $(BUILD_DIST)/libirecovery3/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libirecovery-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libirecovery-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	rm -rf $(BUILD_DIST)/libirecovery-proc
+	mkdir -p $(BUILD_DIST)/libirecovery-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libirecovery}
 
-	# libirecovery.mk Prep libirecovery3
-	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libirecovery-1.0.3.dylib $(BUILD_DIST)/libirecovery3/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/
-
-	# libirecovery.mk Prep libirecovery-dev
-	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{pkgconfig,libirecovery-1.0.{a,dylib}} $(BUILD_DIST)/libirecovery-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libirecovery-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libirecovery.mk Prep libirecovery-utils
-	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin $(BUILD_DIST)/libirecovery-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libirecovery.mk Prep libirecovery-proc
+	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libirecovery-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libirecovery/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libirecovery-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libirecovery-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libirecovery/.build_complete
 
 	# libirecovery.mk Sign
-	$(call SIGN,libirecovery3,general.xml)
-	$(call SIGN,libirecovery-utils,general.xml)
+	$(call SIGN,libirecovery-proc,general.xml)
 
 	# libirecovery.mk Make .debs
-	$(call PACK,libirecovery3,DEB_LIBIRECOVERY_V)
-	$(call PACK,libirecovery-dev,DEB_LIBIRECOVERY_V)
-	$(call PACK,libirecovery-utils,DEB_LIBIRECOVERY_V)
+	$(call PACK,libirecovery-proc,DEB_LIBIRECOVERY_V)
 
 	# libirecovery.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libirecovery{3,-dev,-utils}
+	rm -rf $(BUILD_DIST)/libirecovery-proc
 
 .PHONY: libirecovery libirecovery-package
diff --git a/makefiles/liboffsetfinder64.mk b/makefiles/liboffsetfinder64.mk
index 8a69708..67d21ee 100644
--- a/makefiles/liboffsetfinder64.mk
+++ b/makefiles/liboffsetfinder64.mk
@@ -3,12 +3,12 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS               += liboffsetfinder64
-LIBOFFSETFINDER64_VERSION := 132
-LIBOFFSETFINDER64_COMMIT  := 35d3411bf675a83bdb768bc0ec26fe2344be16f3
-DEB_LIBOFFSETFINDER64_V   ?= $(LIBOFFSETFINDER64_VERSION)-1
+LIBOFFSETFINDER64_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.liboffsetfinder64.version2' | tr -d '\n')
+LIBOFFSETFINDER64_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.liboffsetfinder64.commit' | tr -d '\n')
+DEB_LIBOFFSETFINDER64_V   ?= $(LIBOFFSETFINDER64_VERSION)
 
 liboffsetfinder64-setup: setup
-	$(call GITHUB_ARCHIVE,tihmstar,liboffsetfinder64,$(LIBOFFSETFINDER64_COMMIT),$(LIBOFFSETFINDER64_COMMIT))
+	$(call GITHUB_ARCHIVE,Cryptiiiic,liboffsetfinder64,$(LIBOFFSETFINDER64_COMMIT),$(LIBOFFSETFINDER64_COMMIT))
 	$(call EXTRACT_TAR,liboffsetfinder64-$(LIBOFFSETFINDER64_COMMIT).tar.gz,liboffsetfinder64-$(LIBOFFSETFINDER64_COMMIT),liboffsetfinder64)
 
 	sed -i 's/git rev\-list \-\-count HEAD/printf ${LIBOFFSETFINDER64_VERSION}/g' $(BUILD_WORK)/liboffsetfinder64/configure.ac
@@ -21,7 +21,6 @@ else
 liboffsetfinder64: liboffsetfinder64-setup libgeneral libinsn img4tool openssl libplist
 	cd $(BUILD_WORK)/liboffsetfinder64 && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/liboffsetfinder64
 	+$(MAKE) -C $(BUILD_WORK)/liboffsetfinder64 install \
 		DESTDIR="$(BUILD_STAGE)/liboffsetfinder64"
 	$(call AFTER_BUILD,copy)
@@ -29,24 +28,21 @@ endif
 
 liboffsetfinder64-package: liboffsetfinder64-stage
 	# liboffsetfinder64.mk Package Structure
-	rm -rf $(BUILD_DIST)/liboffsetfinder64-{0,dev}
-	mkdir -p $(BUILD_DIST)/liboffsetfinder64-{0,dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
+	rm -rf $(BUILD_DIST)/liboffsetfinder64-proc
+	mkdir -p $(BUILD_DIST)/liboffsetfinder64-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/liboffsetfinder64}
 
-	# liboffsetfinder64.mk Prep liboffsetfinder64-0
-	cp -a $(BUILD_STAGE)/liboffsetfinder64/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/liboffsetfinder64.0.dylib $(BUILD_DIST)/liboffsetfinder64-0/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# liboffsetfinder64.mk Prep liboffsetfinder64-dev
-	cp -a $(BUILD_STAGE)/liboffsetfinder64/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(liboffsetfinder64.0.dylib) $(BUILD_DIST)/liboffsetfinder64-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/liboffsetfinder64/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/liboffsetfinder64-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# liboffsetfinder64.mk Prep liboffsetfinder64-proc
+	cp -a $(BUILD_STAGE)/liboffsetfinder64/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/liboffsetfinder64-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/liboffsetfinder64/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/liboffsetfinder64-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/liboffsetfinder64-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/liboffsetfinder64/.build_complete
 
 	# liboffsetfinder64.mk Sign
-	$(call SIGN,liboffsetfinder64-0,general.xml)
+	$(call SIGN,liboffsetfinder64-proc,general.xml)
 
 	# liboffsetfinder64.mk Make .debs
-	$(call PACK,liboffsetfinder64-0,DEB_LIBOFFSETFINDER64_V)
-	$(call PACK,liboffsetfinder64-dev,DEB_LIBOFFSETFINDER64_V)
+	$(call PACK,liboffsetfinder64-proc,DEB_LIBOFFSETFINDER64_V)
 
 	# liboffsetfinder64.mk Build cleanup
-	rm -rf $(BUILD_DIST)/liboffsetfinder64-{0,dev}
+	rm -rf $(BUILD_DIST)/liboffsetfinder64-proc
 
 .PHONY: liboffsetfinder64 liboffsetfinder64-package
diff --git a/makefiles/libplist.mk b/makefiles/libplist.mk
index 13c07db..01ae375 100644
--- a/makefiles/libplist.mk
+++ b/makefiles/libplist.mk
@@ -3,12 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS       += libplist
-LIBPLIST_VERSION  := 2.2.0
-DEB_LIBPLIST_V    ?= $(LIBPLIST_VERSION)
+LIBPLIST_COMMIT	 := $(shell cat build_tools/versions.json | jq -r '.versions.libplist.commit' | tr -d '\n')
+LIBPLIST_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libplist.version2' | tr -d '\n').$(shell echo $(LIBPLIST_COMMIT) | cut -c -7)
+DEB_LIBPLIST_V ?= $(LIBPLIST_VERSION)
 
 libplist-setup: setup
-	$(call GITHUB_ARCHIVE,libimobiledevice,libplist,$(LIBPLIST_VERSION),$(LIBPLIST_VERSION))
-	$(call EXTRACT_TAR,libplist-$(LIBPLIST_VERSION).tar.gz,libplist-$(LIBPLIST_VERSION),libplist)
+	$(call GITHUB_ARCHIVE,libimobiledevice,libplist,$(LIBPLIST_COMMIT),$(LIBPLIST_COMMIT))
+	$(call EXTRACT_TAR,libplist-$(LIBPLIST_COMMIT).tar.gz,libplist-$(LIBPLIST_COMMIT),libplist)
 
 ifneq ($(wildcard $(BUILD_WORK)/libplist/.build_complete),)
 libplist:
@@ -18,7 +19,6 @@ libplist: libplist-setup
 	cd $(BUILD_WORK)/libplist && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS) \
 		--without-cython
-	+$(MAKE) -C $(BUILD_WORK)/libplist
 	+$(MAKE) -C $(BUILD_WORK)/libplist install \
 		DESTDIR="$(BUILD_STAGE)/libplist"
 	$(call AFTER_BUILD,copy)
@@ -27,45 +27,22 @@ endif
 libplist-package: .SHELLFLAGS=-O extglob -c
 libplist-package: libplist-stage
 	# libplist.mk Package Structure
-	rm -rf $(BUILD_DIST)/libplist{3,-dev,-utils} $(BUILD_DIST)/libplist++{3v5,-dev}
-	mkdir -p $(BUILD_DIST)/libplist3/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libplist-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{include/plist,lib/pkgconfig} \
-		$(BUILD_DIST)/libplist-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX) \
-		$(BUILD_DIST)/libplist++3v5/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libplist++-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{include/plist,lib/pkgconfig}
+	rm -rf $(BUILD_DIST)/libplist-proc
+	mkdir -p $(BUILD_DIST)/libplist-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libplist}
 
-	# libplist.mk Prep libplist3
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libplist-2.0.3.dylib $(BUILD_DIST)/libplist3/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
 
-	# libplist.mk Prep libplist-dev
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/plist/plist.h $(BUILD_DIST)/libplist-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/plist
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libplist-2.0.{a,dylib} $(BUILD_DIST)/libplist-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/pkgconfig/libplist-2.0.pc $(BUILD_DIST)/libplist-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/pkgconfig
-
-	# libplist.mk Prep libplist-utils
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,share} $(BUILD_DIST)/libplist-utils/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libplist.mk Prep libplist++3v5
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libplist++-2.0.3.dylib $(BUILD_DIST)/libplist++3v5/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libplist.mk Prep libplist++-dev
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/plist/!(plist).h $(BUILD_DIST)/libplist++-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/plist
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libplist++-2.0.{a,dylib} $(BUILD_DIST)/libplist++-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/pkgconfig/libplist++-2.0.pc $(BUILD_DIST)/libplist++-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/pkgconfig
+	# libplist.mk Prep libplist-proc
+	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libplist-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libplist/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libplist-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libplist-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libplist/.build_complete
 
 	# libplist.mk Sign
-	$(call SIGN,libplist3,general.xml)
-	$(call SIGN,libplist-utils,general.xml)
-	$(call SIGN,libplist++3v5,general.xml)
+	$(call SIGN,libplist-proc,general.xml)
 
 	# libplist.mk Make .debs
-	$(call PACK,libplist3,DEB_LIBPLIST_V)
-	$(call PACK,libplist-dev,DEB_LIBPLIST_V)
-	$(call PACK,libplist-utils,DEB_LIBPLIST_V)
-	$(call PACK,libplist++3v5,DEB_LIBPLIST_V)
-	$(call PACK,libplist++-dev,DEB_LIBPLIST_V)
+	$(call PACK,libplist-proc,DEB_LIBPLIST_V)
 
 	# libplist.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libplist{3,-dev,-utils} $(BUILD_DIST)/libplist++{3v5,-dev}
+	rm -rf $(BUILD_DIST)/libplist-proc
 
 .PHONY: libplist libplist-package
diff --git a/makefiles/libpng16.mk b/makefiles/libpng16.mk
index 6a85159..eea4258 100644
--- a/makefiles/libpng16.mk
+++ b/makefiles/libpng16.mk
@@ -3,12 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS      += libpng16
-LIBPNG16_VERSION := 1.6.37
-DEB_LIBPNG16_V   ?= $(LIBPNG16_VERSION)-2
+LIBPNG16_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libpng16.version2' | tr -d '\n')
+LIBPNG16_COMMIT := $(shell cat build_tools/versions.json | jq -r '.versions.libpng16.commit' | tr -d '\n')
+DEB_LIBPNG16_V   ?= $(LIBPNG16_VERSION)
 
 libpng16-setup: setup
-	wget -q -nc -P $(BUILD_SOURCE) https://sourceforge.net/projects/libpng/files/libpng16/$(LIBPNG16_VERSION)/libpng-$(LIBPNG16_VERSION).tar.xz
-	$(call EXTRACT_TAR,libpng-$(LIBPNG16_VERSION).tar.xz,libpng-$(LIBPNG16_VERSION),libpng16)
+	$(call GITHUB_ARCHIVE,glennrp,libpng,$(LIBPNG16_COMMIT),$(LIBPNG16_COMMIT))
+	$(call EXTRACT_TAR,libpng-$(LIBPNG16_COMMIT).tar.gz,libpng-$(LIBPNG16_COMMIT),libpng16)
 	# Fix the .pc file to use Apple's zlib
 	sed -i 's/Requires: zlib/Requires: /;s/\(Libs:.*\)/\1 -lz/' $(BUILD_WORK)/libpng16/libpng.pc.in
 	$(call DO_PATCH,libpng16,libpng16,-p1)
@@ -20,7 +21,6 @@ else
 libpng16: libpng16-setup
 	cd $(BUILD_WORK)/libpng16 && ./configure -C \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/libpng16
 	+$(MAKE) -C $(BUILD_WORK)/libpng16 install \
 		DESTDIR=$(BUILD_STAGE)/libpng16
 	$(call AFTER_BUILD,copy)
@@ -28,33 +28,21 @@ endif
 
 libpng16-package: libpng16-stage
 	# libpng16.mk Package Structure
-	rm -rf $(BUILD_DIST)/libpng16-{16,dev,tools}
-	mkdir -p $(BUILD_DIST)/libpng16-16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libpng16-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,lib} \
-		$(BUILD_DIST)/libpng16-tools/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin
+	rm -rf $(BUILD_DIST)/libpng16-proc
+	mkdir -p $(BUILD_DIST)/libpng16-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libpng16}
 
-	# libpng16.mk Prep libpng16-16
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libpng16.16.dylib $(BUILD_DIST)/libpng16-16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libpng16.mk Prep libpng16-dev
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin/*-config $(BUILD_DIST)/libpng16-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libpng16.16.dylib) $(BUILD_DIST)/libpng16-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libpng16-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share $(BUILD_DIST)/libpng16-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libpng16.mk Prep libpng16-tools
-	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin/!(*-config) $(BUILD_DIST)/libpng16-tools/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin
+	# libpng16.mk Prep libpng16-proc
+	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libpng16-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libpng16/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libpng16-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libpng16-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libpng16/.build_complete
 
 	# libpng16.mk Sign
-	$(call SIGN,libpng16-16,general.xml)
-	$(call SIGN,libpng16-tools,general.xml)
+	$(call SIGN,libpng16-proc,general.xml)
 
 	# libpng16.mk Make .debs
-	$(call PACK,libpng16-16,DEB_LIBPNG16_V)
-	$(call PACK,libpng16-dev,DEB_LIBPNG16_V)
-	$(call PACK,libpng16-tools,DEB_LIBPNG16_V)
+	$(call PACK,libpng16-proc,DEB_LIBPNG16_V)
 
 	# libpng16.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libpng16-{16,dev,tools}
+	rm -rf $(BUILD_DIST)/libpng16-proc
 
 .PHONY: libpng16 libpng16-package
diff --git a/makefiles/libusbmuxd.mk b/makefiles/libusbmuxd.mk
index 80d1dfd..9b2959f 100644
--- a/makefiles/libusbmuxd.mk
+++ b/makefiles/libusbmuxd.mk
@@ -3,21 +3,21 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS        += libusbmuxd
-LIBUSBMUXD_VERSION := 2.0.2
+LIBUSBMUXD_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.libusbmuxd.commit' | tr -d '\n')
+LIBUSBMUXD_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libusbmuxd.version2' | tr -d '\n').$(shell echo $(LIBUSBMUXD_COMMIT) | cut -c -7)
 DEB_LIBUSBMUXD_V   ?= $(LIBUSBMUXD_VERSION)
 
 libusbmuxd-setup: setup
-	$(call GITHUB_ARCHIVE,libimobiledevice,libusbmuxd,$(LIBUSBMUXD_VERSION),$(LIBUSBMUXD_VERSION))
-	$(call EXTRACT_TAR,libusbmuxd-$(LIBUSBMUXD_VERSION).tar.gz,libusbmuxd-$(LIBUSBMUXD_VERSION),libusbmuxd)
+	$(call GITHUB_ARCHIVE,libimobiledevice,libusbmuxd,$(LIBUSBMUXD_COMMIT),$(LIBUSBMUXD_COMMIT))
+	$(call EXTRACT_TAR,libusbmuxd-$(LIBUSBMUXD_COMMIT).tar.gz,libusbmuxd-$(LIBUSBMUXD_COMMIT),libusbmuxd)
 
 ifneq ($(wildcard $(BUILD_WORK)/libusbmuxd/.build_complete),)
 libusbmuxd:
 	@echo "Using previously built libusbmuxd."
 else
-libusbmuxd: libusbmuxd-setup libplist
+libusbmuxd: libusbmuxd-setup libplist libimobiledevice-glue
 	cd $(BUILD_WORK)/libusbmuxd && ./autogen.sh \
 		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/libusbmuxd
 	+$(MAKE) -C $(BUILD_WORK)/libusbmuxd install \
 		DESTDIR="$(BUILD_STAGE)/libusbmuxd"
 	$(call AFTER_BUILD,copy)
@@ -25,31 +25,21 @@ endif
 
 libusbmuxd-package: libusbmuxd-stage
 	# libusbmuxd.mk Package Structure
-	rm -rf $(BUILD_DIST)/libusbmuxd{6,-dev,-tools}
-	mkdir -p $(BUILD_DIST)/libusbmuxd6/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libusbmuxd-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libusbmuxd-tools/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	rm -rf $(BUILD_DIST)/libusbmuxd-proc
+	mkdir -p $(BUILD_DIST)/libusbmuxd-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libusbmuxd}
 
-	# libusbmuxd.mk Prep libusbmuxd6
-	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libusbmuxd-2.0.6.dylib $(BUILD_DIST)/libusbmuxd6/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/
-
-	# libusbmuxd.mk Prep libusbmuxd-dev
-	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{pkgconfig,libusbmuxd-2.0.{a,dylib}} $(BUILD_DIST)/libusbmuxd-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libusbmuxd-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libusbmuxd.mk Prep libusbmuxd-tools
-	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,share} $(BUILD_DIST)/libusbmuxd-tools/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	# libusbmuxd.mk Prep libusbmuxd-proc
+	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libusbmuxd-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/libusbmuxd/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libusbmuxd-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libusbmuxd-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libusbmuxd/.build_complete
 
 	# libusbmuxd.mk Sign
-	$(call SIGN,libusbmuxd6,general.xml)
-	$(call SIGN,libusbmuxd-tools,general.xml)
+	$(call SIGN,libusbmuxd-proc,general.xml)
 
 	# libusbmuxd.mk Make .debs
-	$(call PACK,libusbmuxd6,DEB_LIBUSBMUXD_V)
-	$(call PACK,libusbmuxd-dev,DEB_LIBUSBMUXD_V)
-	$(call PACK,libusbmuxd-tools,DEB_LIBUSBMUXD_V)
+	$(call PACK,libusbmuxd-proc,DEB_LIBUSBMUXD_V)
 
 	# libusbmuxd.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libusbmuxd{6,-dev,-tools}
+	rm -rf $(BUILD_DIST)/libusbmuxd-proc
 
 .PHONY: libusbmuxd libusbmuxd-package
diff --git a/makefiles/libzip.mk b/makefiles/libzip.mk
index f659969..8aa12ab 100644
--- a/makefiles/libzip.mk
+++ b/makefiles/libzip.mk
@@ -3,67 +3,55 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS    += libzip
-LIBZIP_VERSION := 1.7.3
-DEB_LIBZIP_V   ?= $(LIBZIP_VERSION)-1
+LIBZIP_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.libzip.version2' | tr -d '\n')
+LIBZIP_COMMIT := $(shell cat build_tools/versions.json | jq -r '.versions.libzip.commit' | tr -d '\n')
+DEB_LIBZIP_V   ?= $(LIBZIP_VERSION)
 
 libzip-setup: setup
-	wget -q -nc -P $(BUILD_SOURCE) https://libzip.org/download/libzip-$(LIBZIP_VERSION).tar.gz
-	$(call EXTRACT_TAR,libzip-$(LIBZIP_VERSION).tar.gz,libzip-$(LIBZIP_VERSION),libzip)
+	$(call GITHUB_ARCHIVE,nih-at,libzip,$(LIBZIP_COMMIT),$(LIBZIP_COMMIT))
+	$(call EXTRACT_TAR,libzip-$(LIBZIP_COMMIT).tar.gz,libzip-$(LIBZIP_COMMIT),libzip)
 
 ifneq ($(wildcard $(BUILD_WORK)/libzip/.build_complete),)
 libzip:
 	@echo "Using previously built libzip."
 else
-libzip: libzip-setup xz openssl
+libzip: libzip-setup openssl
 	cd $(BUILD_WORK)/libzip && cmake . \
 		$(DEFAULT_CMAKE_FLAGS) \
+		-DBUILD_SHARED_LIBS=0 \
+		-DENABLE_LZMA=OFF \
+		-DENABLE_BZIP2=OFF \
 		-DCOMMON_ARCH=$(DEB_ARCH) \
 		-DENABLE_COMMONCRYPTO=OFF \
 		-DENABLE_GNUTLS=OFF \
 		-DENABLE_MBEDTLS=OFF \
 		-DENABLE_WINDOWS_CRYPTO=OFF \
 		-DENABLE_OPENSSL=ON
-	+$(MAKE) -C $(BUILD_WORK)/libzip
-	+$(MAKE) -C $(BUILD_WORK)/libzip install \
+	sed -i '77,80d' $(BUILD_WORK)/libzip/cmake_install.cmake
+	+$(MAKE) zip/fast -C $(BUILD_WORK)/libzip
+	+$(MAKE) -C $(BUILD_WORK)/libzip install/strip/fast \
 		DESTDIR="$(BUILD_STAGE)/libzip"
 	$(call AFTER_BUILD,copy)
 endif
 
 libzip-package: libzip-stage
 	# libzip.mk Package Structure
-	rm -rf $(BUILD_DIST)/libzip{5,-dev} $(BUILD_DIST)/zip{cmp,merge,tool}
-	mkdir -p $(BUILD_DIST)/libzip5/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib \
-		$(BUILD_DIST)/libzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{lib,share/man} \
-		$(BUILD_DIST)/zip{cmp,merge,tool}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,share/man/man1}
+	rm -rf $(BUILD_DIST)/libzip-proc
+	mkdir -p $(BUILD_DIST)/libzip-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libzip}
 
-	# libzip.mk Prep libzip5
-	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/libzip.5*.dylib $(BUILD_DIST)/libzip5/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-
-	# libzip.mk Prep libzip-dev
-	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/!(libzip.5*.dylib) $(BUILD_DIST)/libzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/man/man3 $(BUILD_DIST)/libzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/man
-	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libzip-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# libzip.mk Prep zip{cmp,merge,tool}
-	for bin in zip{cmp,merge,tool}; do \
-		cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin/$$bin $(BUILD_DIST)/$$bin/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin; \
-		cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/man/man1/$$bin.1 $(BUILD_DIST)/$$bin/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/man/man1; \
-	done
+	# libzip.mk Prep libzip-proc
+	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libzip-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	rm -rf $(BUILD_DIST)/libzip-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/cmake
+	cp -a $(BUILD_STAGE)/libzip/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libzip-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libzip-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/libzip/.build_complete
 
 	# libzip.mk Sign
-	$(call SIGN,libzip5,general.xml)
-	$(call SIGN,zipcmp,general.xml)
-	$(call SIGN,zipmerge,general.xml)
-	$(call SIGN,ziptool,general.xml)
+	$(call SIGN,libzip-proc,general.xml)
 
 	# libzip.mk Make .debs
-	$(call PACK,libzip5,DEB_LIBZIP_V)
-	$(call PACK,libzip-dev,DEB_LIBZIP_V)
-	$(call PACK,zipcmp,DEB_LIBZIP_V)
-	$(call PACK,zipmerge,DEB_LIBZIP_V)
-	$(call PACK,ziptool,DEB_LIBZIP_V)
+	$(call PACK,libzip-proc,DEB_LIBZIP_V)
 
 	# libzip.mk Build cleanup
-	rm -rf $(BUILD_DIST)/libzip{5,-dev} $(BUILD_DIST)/zip{cmp,merge,tool}
+	rm -rf $(BUILD_DIST)/libzip-proc
 
 .PHONY: libzip libzip-package
diff --git a/makefiles/openssl.mk b/makefiles/openssl.mk
index c65be42..462b35d 100644
--- a/makefiles/openssl.mk
+++ b/makefiles/openssl.mk
@@ -2,15 +2,24 @@ ifneq ($(PROCURSUS),1)
 $(error Use the main Makefile)
 endif
 
+ifneq (,$(findstring aarch64,$(GNU_HOST_TRIPLE)))
+	SSL_SCHEME := darwin64-arm64-cc
+else ifneq (,$(findstring arm,$(GNU_HOST_TRIPLE)))
+	SSL_SCHEME := arm-apple-darwin
+else ifneq (,$(findstring x86_64,$(GNU_HOST_TRIPLE)))
+	SSL_SCHEME := darwin64-x86_64-cc
+else
+	$(error Host triple $(GNU_HOST_TRIPLE) isn't supported)
+endif
+
 STRAPPROJECTS   += openssl
-OPENSSL_VERSION := 3.0.0
+OPENSSL_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.openssl.version2' | tr -d '\n')
+OPENSSL_COMMIT := $(shell cat build_tools/versions.json | jq -r '.versions.openssl.commit' | tr -d '\n')
 DEB_OPENSSL_V   ?= $(OPENSSL_VERSION)
 
 openssl-setup: setup
-	wget -q -nc -P $(BUILD_SOURCE) https://www.openssl.org/source/openssl-$(OPENSSL_VERSION).tar.gz{,.asc}
-	$(call PGP_VERIFY,openssl-$(OPENSSL_VERSION).tar.gz,asc)
-	$(call EXTRACT_TAR,openssl-$(OPENSSL_VERSION).tar.gz,openssl-$(OPENSSL_VERSION),openssl)
-	$(call DO_PATCH,openssl,openssl,-p1)
+	$(call GITHUB_ARCHIVE,openssl,openssl,$(OPENSSL_COMMIT),$(OPENSSL_COMMIT))
+	$(call EXTRACT_TAR,openssl-$(OPENSSL_COMMIT).tar.gz,openssl-$(OPENSSL_COMMIT),openssl)
 
 ifneq ($(wildcard $(BUILD_WORK)/openssl/.build_complete),)
 openssl:
@@ -22,44 +31,29 @@ openssl: openssl-setup
 		--openssldir=$(MEMO_PREFIX)/etc/ssl \
 		shared \
 		no-tests \
-		darwin64-$$(echo $(LLVM_TARGET) | cut -f1 -d-)
-	+$(MAKE) -C $(BUILD_WORK)/openssl
-	+$(MAKE) -C $(BUILD_WORK)/openssl install install_ssldirs \
+		$(SSL_SCHEME)
+	+$(MAKE) -C $(BUILD_WORK)/openssl install_dev \
 		DESTDIR=$(BUILD_STAGE)/openssl
 	$(call AFTER_BUILD,copy)
 endif
 
 openssl-package: openssl-stage
 	# openssl.mk Package Structure
-	rm -rf $(BUILD_DIST)/{openssl,libssl{3,-dev,-doc}}
-	mkdir -p $(BUILD_DIST)/{openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin,libssl{3,-dev}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib} \
-		$(BUILD_DIST)/libssl-doc/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/
-	
-	# openssl.mk Prep libssl3
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{*.3.dylib,engines-3,ossl-modules} $(BUILD_DIST)/libssl3/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	
-	# openssl.mk Prep libssl-dev
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/{lib{ssl,crypto}.{a,dylib},pkgconfig} $(BUILD_DIST)/libssl-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libssl-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-	
-	# openssl.mk Prep libssl-doc
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/man $(BUILD_DIST)/libssl-doc/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/share/
-	
-	# openssl.mk Prep openssl
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)/etc $(BUILD_DIST)/openssl/$(MEMO_PREFIX)
-	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin/* $(BUILD_DIST)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/bin
-	
+	rm -rf $(BUILD_DIST)/libssl-proc
+	mkdir -p $(BUILD_DIST)/libssl-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/openssl}
+
+	# openssl.mk Prep libssl-proc
+	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib $(BUILD_DIST)/libssl-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	cp -a $(BUILD_STAGE)/openssl/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include $(BUILD_DIST)/libssl-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libssl-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/openssl/.build_complete
+
 	# openssl.mk Sign
-	$(call SIGN,libssl3,general.xml)
-	$(call SIGN,openssl,general.xml)
-	
+	$(call SIGN,libssl-proc,general.xml)
+
 	# openssl.mk Make .debs
-	$(call PACK,libssl3,DEB_OPENSSL_V)
-	$(call PACK,libssl-dev,DEB_OPENSSL_V)
-	$(call PACK,libssl-doc,DEB_OPENSSL_V)
-	$(call PACK,openssl,DEB_OPENSSL_V)
-	
+	$(call PACK,libssl-proc,DEB_OPENSSL_V)
+
 	# openssl.mk Build cleanup
-	rm -rf $(BUILD_DIST)/{openssl,libssl{3,-dev,-doc}}
+	rm -rf $(BUILD_DIST)/libssl-proc
 
 .PHONY: openssl openssl-package
diff --git a/makefiles/tsschecker.mk b/makefiles/tsschecker.mk
index e23b84a..83faf47 100644
--- a/makefiles/tsschecker.mk
+++ b/makefiles/tsschecker.mk
@@ -3,30 +3,27 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS        += tsschecker
-TSSCHECKER_VERSION := 334
-TSSCHECKER_COMMIT  := 1b5e82e3c8275874a3595c2c57cd5ea9921dc2e2
+#TSSCHECKER_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.tsschecker.version' | tr -d '\n')
+#TSSCHECKER_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.tsschecker.commit' | tr -d '\n')
 DEB_TSSCHECKER_V   ?= $(TSSCHECKER_VERSION)
 
 tsschecker-setup: setup
-	$(call GITHUB_ARCHIVE,1Conan,tsschecker,$(TSSCHECKER_COMMIT),$(TSSCHECKER_COMMIT))
-	$(call GITHUB_ARCHIVE,tihmstar,jssy,master,master)
-	$(call EXTRACT_TAR,tsschecker-$(TSSCHECKER_COMMIT).tar.gz,tsschecker-$(TSSCHECKER_COMMIT),tsschecker)
-	# so EXTRACT_TAR wont fail
-	-rmdir $(BUILD_WORK)/tsschecker/external/jssy
-	$(call EXTRACT_TAR,jssy-master.tar.gz,jssy-master,tsschecker/external/jssy)
-
-	sed -i 's/git rev\-list \-\-count HEAD/printf ${TSSCHECKER_VERSION}/g' $(BUILD_WORK)/tsschecker/configure.ac
-	sed -i 's/git rev\-parse HEAD/printf ${TSSCHECKER_COMMIT}/g' $(BUILD_WORK)/tsschecker/configure.ac
+	ln -sf ~/source/tsschecker $(BUILD_WORK)/
 
 
 ifneq ($(wildcard $(BUILD_WORK)/tsschecker/.build_complete),)
 tsschecker:
 	@echo "Using previously built tsschecker."
 else
-tsschecker: tsschecker-setup libfragmentzip libplist curl libirecovery
+tsschecker: tsschecker-setup libfragmentzip libplist libirecovery
+	fd -pe dylib -X rm \; '.*' build_*
 	cd $(BUILD_WORK)/tsschecker && ./autogen.sh \
-		$(DEFAULT_CONFIGURE_FLAGS)
-	+$(MAKE) -C $(BUILD_WORK)/tsschecker
+		$(DEFAULT_CONFIGURE_FLAGS) \
+		libfragmentzip_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lcurl" \
+		libfragmentzip_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
+		libcurl_LIBS="-L$(TARGET_SYSROOT)/usr/lib -lcurl" \
+		libcurl_CFLAGS="-I$(TARGET_SYSROOT)/usr/include" \
+		LDFLAGS="$(LDFLAGS) -L$(TARGET_SYSROOT)/usr/lib -lz -framework CoreFoundation -framework IOKit -L$(BUILD_BASE)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib -lfragmentzip -limobiledevice-glue-1.0"
 	+$(MAKE) -C $(BUILD_WORK)/tsschecker install \
 		DESTDIR="$(BUILD_STAGE)/tsschecker"
 	$(call AFTER_BUILD)
diff --git a/makefiles/xpwn.mk b/makefiles/xpwn.mk
index 47e3d37..10b13dc 100644
--- a/makefiles/xpwn.mk
+++ b/makefiles/xpwn.mk
@@ -3,14 +3,13 @@ $(error Use the main Makefile)
 endif
 
 SUBPROJECTS  += xpwn
-XPWN_COMMIT  := def39d6e0ed0fdec0a0ff526bd11bec15d8de4e7
-XPWN_VERSION := 0.5.8+git20201206.$(shell echo $(XPWN_COMMIT) | cut -c -7)
+XPWN_COMMIT  := $(shell cat build_tools/versions.json | jq -r '.versions.xpwn.commit' | tr -d '\n')
+XPWN_VERSION := $(shell cat build_tools/versions.json | jq -r '.versions.xpwn.version2' | tr -d '\n').$(shell echo $(XPWN_COMMIT) | cut -c -7)
 DEB_XPWN_V   ?= $(XPWN_VERSION)
 
 xpwn-setup: setup
-	$(call GITHUB_ARCHIVE,OothecaPickle,xpwn,$(XPWN_COMMIT),$(XPWN_COMMIT))
+	$(call GITHUB_ARCHIVE,nyuszika7h,xpwn,$(XPWN_COMMIT),$(XPWN_COMMIT))
 	$(call EXTRACT_TAR,xpwn-$(XPWN_COMMIT).tar.gz,xpwn-$(XPWN_COMMIT),xpwn)
-	$(call DO_PATCH,xpwn,xpwn,-p1)
 
 	sed -i 's/powerpc-apple-darwin8-libtool/libtool/' $(BUILD_WORK)/xpwn/ipsw-patch/CMakeLists.txt
 
@@ -21,36 +20,29 @@ else
 xpwn: xpwn-setup libpng16 openssl
 	cd $(BUILD_WORK)/xpwn && cmake . \
 		$(DEFAULT_CMAKE_FLAGS) \
+		-DBUILD_SHARED_LIBS=0 \
 		-DBZIP2_LIBRARIES="-L$(TARGET_SYSROOT)/usr/lib -lbz2" \
 		-DZLIB_LIBRARY="-L$(TARGET_SYSROOT)/usr/lib -lz"
-	+$(MAKE) -C $(BUILD_WORK)/xpwn
-	+$(MAKE) -C $(BUILD_WORK)/xpwn install \
-		DESTDIR=$(BUILD_STAGE)/xpwn
+		+$(MAKE) common/fast xpwn/fast -C $(BUILD_WORK)/xpwn
 	mkdir -p {$(BUILD_BASE),$(BUILD_STAGE)/xpwn}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{include/xpwn,lib/xpwn}
 	cp -a $(BUILD_WORK)/xpwn/includes/* $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/include/xpwn
-	cp -a $(BUILD_WORK)/xpwn/{ipsw-patch/libxpwn,minizip/libminizip,common/libcommon,hfs/libhfs,dmg/libdmg}.a $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/xpwn
+	cp -a $(BUILD_WORK)/xpwn/{ipsw-patch/libxpwn,common/libcommon}.a $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/lib/xpwn
 	$(call AFTER_BUILD,copy)
 endif
 
 xpwn-package: xpwn-stage
 	# xpwn.mk Package Structure
-	rm -rf $(BUILD_DIST)/{libxpwn-dev,xpwn}
-	mkdir -p $(BUILD_DIST)/{libxpwn-dev,xpwn}/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	rm -rf $(BUILD_DIST)/libxpwn-proc
+	mkdir -p $(BUILD_DIST)/libxpwn-proc/{Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX),Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/xpwn}
 
-	# xpwn.mk Prep xpwn
-	cp -a $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{bin,share} $(BUILD_DIST)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# xpwn.mk Prep libxpwn-dev
-	cp -a $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{include,lib} $(BUILD_DIST)/libxpwn-dev/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
-
-	# xpwn.mk Sign
-	$(call SIGN,xpwn,general.xml)
+	# xpwn.mk Prep libxpwn-proc
+	cp -a $(BUILD_STAGE)/xpwn/$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)/{include,lib} $(BUILD_DIST)/libxpwn-proc/Users/runner/Procursus/build_base/$(MEMO_TARGET)/$(MEMO_CFVER)$(MEMO_PREFIX)$(MEMO_SUB_PREFIX)
+	touch $(BUILD_DIST)/libxpwn-proc/Users/runner/Procursus/build_work/$(MEMO_TARGET)/$(MEMO_CFVER)/xpwn/.build_complete
 
 	# xpwn.mk Make .debs
-	$(call PACK,xpwn,DEB_XPWN_V)
-	$(call PACK,libxpwn-dev,DEB_XPWN_V)
+	$(call PACK,libxpwn-proc,DEB_XPWN_V)
 
 	# xpwn.mk Build cleanup
-	rm -rf $(BUILD_DIST)/{libxpwn-dev,xpwn}
+	rm -rf $(BUILD_DIST)/libxpwn-proc
 
 .PHONY: xpwn xpwn-package
